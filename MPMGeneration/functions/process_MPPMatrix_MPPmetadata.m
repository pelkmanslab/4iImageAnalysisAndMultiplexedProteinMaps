function [mpp_matrix, mpp_metadata, cells_metadata, path_save1] = process_MPPMatrix_MPPmetadata(path_MPPMatrix, stains_to_exclude, val_background, val_quantile, val_threshold, name_output, path_output)
%%% Description
% This function processes the Multiplexed Pixel Profile Matrix which was
% generated by Script_01_GenerateMPPMatrix. Specifically, it exclude
% unwanted 4i signals, subtracts background, rescales 4i channel
% intesities, and excluded MPP which have intensities all below a specified
% value (pixels within cells which have no signal).
% 
% This code accompanies the publication
% G. Gut et al., Science 361, eaar7042 (2018). DOI: 10.1126/science.aar7042
% Author: Gabriele Gut, University of Zurich, Switzerland

%%% Inputs
% path_MPPMatrix = path_save_raw; % specify path to the .mat file generated in Script_01_GenerateMPPMatrix (called path_save_raw) which contains MPP related variables, e.g. path_save_raw
% stains_to_exclude = []; % specify which 4i channels should be excluded from further analysis
% val_background = []; % specify background intensity value of the camera chip  e.g. 110
% val_quantile = []; % specify quantile value, which should be used to rescale intensties of each 4i channel between 0 and 100, where val_quantile will be 100, e.g. 0.98
% val_threshold = []; % specify which singal value should be used to exclude MPP profile, if all 4i channel intensities lay below val_threshold, e.g. 33.333333333
% name_output = name_output; % specify a name, with which you want to label all outputs, e.g. use same name as used in Script_01_GenerateMPPMatrix
% path_output = path_output; % specify directory, where all outputs should be saved, e.g. use same path as used in Script_01_GenerateMPPMatrix

%%% Outputs
% mpp_matrix, a 2D matrix containing the Multiplexed Pixel Profiles (MPP) processed according to user inputs
% mpp_metadata, a 2D matrix containing the metadata information of each MPP. Rows correspond to MPPs MPPMatrix, the first column contains the cell ID, the second column the pixel ID.
% cells_metadata, a 2D matrix containing the metadata information of cells in CellProfiler 1 format. Rows correspond to cells, the first columns contains the row identifier (in numneric, e.g. A = 1, B = 2) of the well of the cell.
% path_save1, path to where all proccesed MPP related files have been saved. 


%% Load MPP Matrix and cell metadata
mpp_input = load(path_MPPMatrix);
cells_metadata = mpp_input.cells_metadata;
mpp_metadata = mpp_input.mpp_metadata;
mpp_matrix = mpp_input.mpp_matrix;
clear mpp_input

%% Exclude stain, which are not to me used for Multiplexed Protein Map analysis
mpp_matrix(:,stains_to_exclude) = [];

%% Intensity background subtraction
mpp_matrix = mpp_matrix-val_background;
mpp_matrix(mpp_matrix<0) = 0;

%% Rescale pixel intensities between 0 and 1 based on specified quantile of signal
tops = quantile(mpp_matrix, val_quantile);
tops_mat = repmat(tops, size(mpp_matrix,1),1);
mpp_matrix = mpp_matrix./tops_mat;

%% Rescale intensity values between 0 and 100;
mpp_matrix = round(mpp_matrix * 10000)/100;

%% Exclude MPP which contain only intensity values smaller than specified by val_threshold
del_cell = all(mpp_matrix <= val_threshold,2);
mpp_matrix(del_cell,:) = [];
mpp_metadata(del_cell,:) = [];

%% Get ready for saving
date_time = datestr(datetime('now'));
date_time = strrep(date_time,' ','_');
date_time = strrep(date_time,':','');

name_save = sprintf('MPPMatrixProcessed_%s',name_output);
path_save1 = fullfile(path_output,strcat(date_time, '_',name_save,'.mat'));
path_save2 = fullfile(path_output,strcat(date_time, '_',name_save,'.csv'));

%% Save
save(path_save1, 'mpp_matrix', 'mpp_metadata', 'cells_metadata', '-v7.3');
fprintf('MatLab file saved\n')

csvwrite(path_save2, mpp_matrix);
fprintf('CSV file saved\n')

fprintf('Finished\n')
fprintf('Copy paste following path to processed mpp matrix in the R Script_03_ClusterMPPMatrix_with_SOM.R \n\n%s \n\n', regexprep(path_save2,'\', '/'));

end
